{"version":3,"sources":["components/quotes/QuoteForm.module.css","layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","pages/NotFound.js","layout/MainNavigation.js","layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","App.js","index.js"],"names":["module","exports","NotFound","className","MainNavigation","classes","header","nav","to","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","toString","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetails","params","match","useRouteMatch","path","exact","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0cb1f27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3pbZ5\",\"loading\":\"QuoteForm_loading__3XgZl\",\"control\":\"QuoteForm_control__2G2-O\",\"actions\":\"QuoteForm_actions__bkaCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3HEvJ\",\"logo\":\"MainNavigation_logo__2f8Xc\",\"nav\":\"MainNavigation_nav__BZVto\",\"active\":\"MainNavigation_active__3Gkn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Qqlu\",\"loading\":\"NewCommentForm_loading__3bm4D\",\"control\":\"NewCommentForm_control__3rR5d\",\"actions\":\"NewCommentForm_actions__1ZBDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__18CnS\",\"sorting\":\"QuoteList_sorting__1oLX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1VTEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__9oGxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__IaVgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__9wKdj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__F5orl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2Gb18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1EWzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3kUvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3D2R3\"};","const NotFound = () => {\r\n  /**\r\n   * Globally defined classname\r\n   */\r\n\r\n  return <div className=\"centered\">\r\n      <p>Oops! The page requested is not found!</p>\r\n  </div>;\r\n};\r\nexport default NotFound;\r\n","import classes from './MainNavigation.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nconst MainNavigation = () => {\r\n    return <header className={classes.header}>\r\n        <div> Great Quotes</div>\r\n        <div className={classes.nav}>\r\n            <ul>\r\n                <li><NavLink to='/quotes' activeClassName={classes.active}> All Quotes\r\n                </NavLink></li>\r\n                <li><NavLink to='/new-quote' activeClassName={classes.active}> Add a quote\r\n                </NavLink></li>\r\n            </ul>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default MainNavigation;","import { Fragment } from 'react';\r\nimport classes from './Layout.module.css'\r\nimport MainNavigation from './MainNavigation';\r\nconst Layout =(props) =>{\r\n    return(\r\n        <Fragment>\r\n            <MainNavigation></MainNavigation>\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout;","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { useHistory, useLocation } from \"react-router-dom\";\n\nimport { Fragment } from \"react\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n\n  /**\n   * Gives idea about current location\n   */\n  const location = useLocation();\n  /**\n   * Gives key value pair of the passed object\n   */\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n\n  const changeSortingHandler = () => {\n    /**\n     * Just another alternative\n     */\n    /**\n     *\n     *     history.push({\n      pathname:location.pathname,\n      search:  `?sort=${(isSortAscending? 'desc': 'asc')}`\n    })\n     */\n\n    // history.push(\"/quotes?sort=\" + (isSortAscending ? \"desc\" : \"asc\"));\n    history.push(\n      `${location.pathname}?sort=${isSortAscending ? \"desc\" : \"asc\"}`\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://quote-dashboard-default-rtdb.firebaseio.com/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(commentData, quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${commentData.quoteId}.json`, {\n    method: \"POST\",\n    body: JSON.stringify(commentData.commentData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes}> </QuoteList>;\r\n};\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n    console.log('Focus');\n\n  }\n\n  const finishEntering = () => {\n    setIsEntering(false);\n  }\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>'Are you sure you want to leave? All your data will be lost?'}/>\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEntering} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\nconst NewQuote = () => {\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(status === 'completed'){\r\n        /**\r\n         * With push you can go back to the back button\r\n         * With replace we cannot.\r\n         * Programmatically move it to the quotes page\r\n         */\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n\r\n        // console.log(quoteData);\r\n\r\n    }\r\n    return <QuoteForm  isLoading = {status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n}\r\nexport default NewQuote;","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId.toString() });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link , useRouteMatch} from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {sendRequest, status, data:loadedQuote, error} = useHttp(getSingleQuote, true)\r\n  \r\n  useEffect(() => {\r\n    sendRequest(params.quoteId)\r\n\r\n  }, [sendRequest, params.quoteId])\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if(status === 'pending'){\r\n    return <div className='centered'>{error}</div>\r\n  }\r\n  \r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n","import  NotFound from './pages/NotFound';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\nimport AllQuotes from \"./pages/AllQuotes\";\r\nimport NewQuote from \"./pages/NewQuote\";\r\nimport QuoteDetails from \"./pages/QuoteDetails\";\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n    <Switch>\r\n      <Route path='/' exact>\r\n        <AllQuotes/>\r\n      </Route>\r\n      <Route path=\"/quotes\" exact>\r\n         <AllQuotes/>\r\n      </Route>\r\n      <Route path=\"/quotes/:quoteId\">\r\n       <QuoteDetails/>\r\n      </Route>\r\n      <Route path=\"/new-quote\">\r\n        <NewQuote/>\r\n      </Route>\r\n      <Route path='*'>\r\n        <NotFound/>\r\n      </Route>\r\n    </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}