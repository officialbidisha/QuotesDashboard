{"ast":null,"code":"import QuoteForm from'../components/quotes/QuoteForm';import{useHistory}from'react-router-dom';import useHttp from'../hooks/use-http';import{addQuote}from'../lib/lib/api';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var NewQuote=function NewQuote(){var _useHttp=useHttp(addQuote),sendRequest=_useHttp.sendRequest,status=_useHttp.status;var history=useHistory();useEffect(function(){if(status==='completed'){/**\r\n         * With push you can go back to the back button\r\n         * With replace we cannot.\r\n         * Programmatically move it to the quotes page\r\n         */history.push('/quotes');}},[status,history]);var addQuoteHandler=function addQuoteHandler(quoteData){sendRequest(quoteData);// console.log(quoteData);\n};return/*#__PURE__*/_jsx(QuoteForm,{isLoading:status==='pending',onAddQuote:addQuoteHandler});};export default NewQuote;","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/pages/NewQuote.js"],"names":["QuoteForm","useHistory","useHttp","addQuote","useEffect","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,gCAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,C,2CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,aAA8BH,OAAO,CAACC,QAAD,CAArC,CAAOG,WAAP,UAAOA,WAAP,CAAoBC,MAApB,UAAoBA,MAApB,CACA,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEAG,SAAS,CAAC,UAAI,CACV,GAAGG,MAAM,GAAK,WAAd,CAA0B,CAC1B;AACR;AACA;AACA;AACA,WACYC,OAAO,CAACC,IAAR,CAAa,SAAb,EACH,CACJ,CATQ,CASN,CAACF,MAAD,CAASC,OAAT,CATM,CAAT,CAWA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,SAAS,CAAI,CACjCL,WAAW,CAACK,SAAD,CAAX,CAEA;AAEH,CALD,CAMA,mBAAO,KAAC,SAAD,EAAY,SAAS,CAAIJ,MAAM,GAAK,SAApC,CAA+C,UAAU,CAAEG,eAA3D,EAAP,CACH,CAtBD,CAuBA,cAAeL,CAAAA,QAAf","sourcesContent":["import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\nconst NewQuote = () => {\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(status === 'completed'){\r\n        /**\r\n         * With push you can go back to the back button\r\n         * With replace we cannot.\r\n         * Programmatically move it to the quotes page\r\n         */\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n\r\n        // console.log(quoteData);\r\n\r\n    }\r\n    return <QuoteForm  isLoading = {status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n}\r\nexport default NewQuote;"]},"metadata":{},"sourceType":"module"}