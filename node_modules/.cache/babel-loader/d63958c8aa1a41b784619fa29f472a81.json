{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\pages\\\\NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport { useHistory } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/lib/api';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(addQuote);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData); // console.log(quoteData);\n\n    /**\r\n     * With push you can go back to the back button\r\n     * With replace we cannot.\r\n     * Programmatically move it to the quotes page\r\n     */\n\n    history.push('/quotes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(QuoteForm, {\n    isLoading: status.isLoading,\n    onAddQuote: addQuoteHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewQuote, \"snO8YbiVx4pvi6AI7RwJR1+Nuco=\", false, function () {\n  return [useHttp, useHistory];\n});\n\n_c = NewQuote;\nexport default NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/pages/NewQuote.js"],"names":["QuoteForm","useHistory","useHttp","addQuote","useEffect","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData","isLoading"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAwBL,OAAO,CAACC,QAAD,CAArC;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B;AAEAG,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGG,MAAM,KAAK,WAAd,EAA0B;AACtBC,MAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACH;AACJ,GAJQ,EAIN,CAACF,MAAD,EAASC,OAAT,CAJM,CAAT;;AAMA,QAAME,eAAe,GAAGC,SAAS,IAAI;AACjCL,IAAAA,WAAW,CAACK,SAAD,CAAX,CADiC,CAGjC;;AACA;AACR;AACA;AACA;AACA;;AACQH,IAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACH,GAVD;;AAWA,sBAAO,QAAC,SAAD;AAAY,IAAA,SAAS,EAAIF,MAAM,CAACK,SAAhC;AAA2C,IAAA,UAAU,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtBD;;GAAML,Q;UAC4BH,O,EACdD,U;;;KAFdI,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\nconst NewQuote = () => {\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(status === 'completed'){\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n\r\n        // console.log(quoteData);\r\n        /**\r\n         * With push you can go back to the back button\r\n         * With replace we cannot.\r\n         * Programmatically move it to the quotes page\r\n         */\r\n        history.push('/quotes');\r\n    }\r\n    return <QuoteForm  isLoading = {status.isLoading} onAddQuote={addQuoteHandler}/>\r\n}\r\nexport default NewQuote;"]},"metadata":{},"sourceType":"module"}