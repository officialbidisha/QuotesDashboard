{"ast":null,"code":"import _slicedToArray from\"C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment,useRef,useState}from'react';import{Prompt}from'react-router-dom';import Card from'../UI/Card';import LoadingSpinner from'../UI/LoadingSpinner';import classes from'./QuoteForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEntering=_useState2[0],setIsEntering=_useState2[1];var authorInputRef=useRef();var textInputRef=useRef();function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var formFocusedHandler=function formFocusedHandler(){setIsEntering(true);console.log('Focus');};var finishEntering=function finishEntering(){setIsEntering(false);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:isEntering,message:function message(location){return'Are you sure you want to leave? All your data will be lost?';}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:formFocusedHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:finishEntering,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/components/quotes/QuoteForm.js"],"names":["Fragment","useRef","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEntering","setIsEntering","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusedHandler","console","log","finishEntering","location","form","isLoading","loading","control","actions"],"mappings":"qLAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAE3B,cAAoCN,QAAQ,CAAC,KAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,cAAc,CAAGV,MAAM,EAA7B,CACA,GAAMW,CAAAA,YAAY,CAAGX,MAAM,EAA3B,CAEA,QAASY,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,aAAa,CAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C,CACA,GAAMC,CAAAA,WAAW,CAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CAAEC,MAAM,CAAEL,aAAV,CAAyBM,IAAI,CAAEH,WAA/B,CAAjB,EACD,CAED,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/Bb,aAAa,CAAC,IAAD,CAAb,CACAc,OAAO,CAACC,GAAR,CAAY,OAAZ,EAED,CAJD,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BhB,aAAa,CAAC,KAAD,CAAb,CACD,CAFD,CAGA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAED,UAAd,CAA0B,OAAO,CAAE,iBAACkB,QAAD,QAAY,6DAAZ,EAAnC,EADF,cAEE,KAAC,IAAD,wBACE,cAAM,OAAO,CAAEJ,kBAAf,CAAmC,SAAS,CAAEjB,OAAO,CAACsB,IAAtD,CAA4D,QAAQ,CAAEf,iBAAtE,WACGL,KAAK,CAACqB,SAAN,eACC,YAAK,SAAS,CAAEvB,OAAO,CAACwB,OAAxB,uBACE,KAAC,cAAD,IADF,EAFJ,cAOE,aAAK,SAAS,CAAExB,OAAO,CAACyB,OAAxB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAEpB,cAApC,EAFF,GAPF,cAWE,aAAK,SAAS,CAAEL,OAAO,CAACyB,OAAxB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAEnB,YAAlC,EAFF,GAXF,cAeE,YAAK,SAAS,CAAEN,OAAO,CAAC0B,OAAxB,uBACE,eAAQ,OAAO,CAAEN,cAAjB,CAAiC,SAAS,CAAC,KAA3C,uBADF,EAfF,GADF,EAFF,GADF,CA0BD,CArDD,CAuDA,cAAenB,CAAAA,SAAf","sourcesContent":["import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n    console.log('Focus');\n\n  }\n\n  const finishEntering = () => {\n    setIsEntering(false);\n  }\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>'Are you sure you want to leave? All your data will be lost?'}/>\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEntering} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}