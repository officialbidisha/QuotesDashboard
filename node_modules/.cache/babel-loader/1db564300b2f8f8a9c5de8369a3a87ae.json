{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  debugger;\n  console.log(params);\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    quoteId\n  } = params.quoteId;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  const addedCommentHandler = () => {\n    if (status === \"pending\") {\n      comments = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (status === \"completed\" && loadedComments > 0) {\n      comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (status === \"completed\" && loadedComments && loadedComments.length === 0) {\n      comments = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: \"No comments are loaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","console","log","sendRequest","status","data","loadedComments","quoteId","startAddCommentHandler","comments","addedCommentHandler","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMY,MAAM,GAAGV,SAAS,EAAxB;AACA;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAM;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,MAAgDb,OAAO,CAACC,cAAD,CAA7D;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAcP,MAAM,CAACO,OAA3B;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW,CAACI,OAAD,CAAX;AACD,GAFQ,EAEN,CAACJ,WAAD,EAAcI,OAAd,CAFM,CAAT;;AAIA,QAAMC,sBAAsB,GAAG,MAAM;AACnCT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,MAAIU,QAAJ;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAIN,MAAM,KAAK,SAAf,EAA0B;AACxBK,MAAAA,QAAQ,gBACN;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,QAAIL,MAAM,KAAK,WAAX,IAA0BE,cAAc,GAAG,CAA/C,EAAkD;AAChDG,MAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AAED,QACEF,MAAM,KAAK,WAAX,IACAE,cADA,IAEAA,cAAc,CAACK,MAAf,KAA0B,CAH5B,EAIE;AACAF,MAAAA,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;AACF,GApBD;;AAqBA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACkB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACX,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEU,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGV,eAAe,iBACd,QAAC,cAAD;AACE,MAAA,OAAO,EAAES,OADX;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YARJ,eAaE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvDD;;GAAMZ,Q;UAEWP,S,EAGuCG,O;;;KALlDI,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  debugger;\n  console.log(params);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  const { quoteId } = params.quoteId;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  const addedCommentHandler = () => {\n    if (status === \"pending\") {\n      comments = (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      );\n    }\n\n    if (status === \"completed\" && loadedComments > 0) {\n      comments = <CommentsList comments={loadedComments} />;\n    }\n\n    if (\n      status === \"completed\" &&\n      loadedComments &&\n      loadedComments.length === 0\n    ) {\n      comments = <div className=\"centered\">No comments are loaded yet.</div>;\n    }\n  };\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}