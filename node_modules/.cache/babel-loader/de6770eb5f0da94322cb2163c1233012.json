{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"TOQlRtmKUPkpl8JSwetrDQ73Wj8=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/pages/QuoteDetails.js"],"names":["useParams","Route","Link","useRouteMatch","Fragment","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetails","params","match","sendRequest","status","data","loadedQuote","error","useEffect","quote","DUMMY_QUOTES","find","id","quoteId","text","author","path","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAkCC,aAAlC,QAAsD,kBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,KAAK,GAAGR,aAAa,EAA3B;AAEA,QAAM;AAACS,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAACC,WAA3B;AAAwCC,IAAAA;AAAxC,MAAiDT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA9D;AAEAS,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,WAAW;AAEZ,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAIA,QAAMM,KAAK,GAAGC,YAAY,CAACC,IAAb,CAAmBF,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaX,MAAM,CAACY,OAAjD,CAAd;;AACA,MAAI,CAACJ,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACK,IAA9B;AAAoC,MAAA,MAAM,EAAEL,KAAK,CAACM;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEb,KAAK,CAACc,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEd,KAAK,CAACe,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEf,KAAK,CAACc,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7BD;;GAAMhB,Y;UACWT,S,EACDG,a,EAEyCI,O;;;KAJnDE,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import { useParams, Route, Link , useRouteMatch} from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {sendRequest, status, data:loadedQuote, error} = useHttp(getSingleQuote, true)\r\n  \r\n  useEffect(() => {\r\n    sendRequest()\r\n\r\n  }, [sendRequest])\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if (!quote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}