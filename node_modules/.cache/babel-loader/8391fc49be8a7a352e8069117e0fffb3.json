{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  /**\n   * Gives idea about current location\n   */\n\n  const location = useLocation();\n  /**\n   * Gives key value pair of the passed object\n   */\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + 'asc');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/components/quotes/QuoteList.js"],"names":["useHistory","useLocation","Fragment","QuoteItem","classes","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortAscending","get","changeSortingHandler","push","sorting","list","quotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA;AACF;AACA;;AACE,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA;AACF;AACA;;AACE,QAAMQ,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;AAEA,QAAMC,eAAe,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAApD;;AAGA,QAAMC,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,OAAO,CAACQ,IAAR,CAAa,kBAAkB,KAA/B;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACY,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,oBAAjB;AAAA,4BAA6CF,eAAe,GAAE,YAAF,GAAgB,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAER,OAAO,CAACa,IAAvB;AAAA,gBACGX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApCD;;GAAMhB,S;UACYL,U,EAKCC,W;;;KANbI,S;AAsCN,eAAeA,SAAf","sourcesContent":["import { useHistory, useLocation } from 'react-router-dom';\n\nimport { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n\n  /**\n   * Gives idea about current location\n   */\n  const location = useLocation();\n  /**\n   * Gives key value pair of the passed object\n   */\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortAscending = queryParams.get('sort') === 'asc';\n\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + 'asc' )\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending? 'Descending': 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}