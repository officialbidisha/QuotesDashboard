{"ast":null,"code":"import{useParams,Route,Link,useRouteMatch}from\"react-router-dom\";import{Fragment,useEffect}from\"react\";import Comments from\"../components/comments/Comments\";import HighlightedQuote from\"../components/quotes/HighlightedQuote\";import useHttp from\"../hooks/use-http\";import{getSingleQuote}from\"../lib/lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteDetails=function QuoteDetails(){var params=useParams();var match=useRouteMatch();var _useHttp=useHttp(getSingleQuote,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuote=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest(params.quoteId);},[sendRequest,params.quoteId]);// const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\nif(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:error});}if(!loadedQuote.text){return/*#__PURE__*/_jsx(\"p\",{children:\"No quote found\"});}return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(HighlightedQuote,{text:loadedQuote.text,author:loadedQuote.author}),/*#__PURE__*/_jsx(Route,{path:match.path,exact:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(Link,{className:\"btn--flat\",to:\"\".concat(match.url,\"/comments\"),children:\"Load Comments\"})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/comments\"),children:/*#__PURE__*/_jsx(Comments,{})})]});};export default QuoteDetails;","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/pages/QuoteDetails.js"],"names":["useParams","Route","Link","useRouteMatch","Fragment","useEffect","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetails","params","match","sendRequest","status","loadedQuote","data","error","quoteId","text","author","path","url"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,KAApB,CAA2BC,IAA3B,CAAkCC,aAAlC,KAAsD,kBAAtD,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,cAAT,KAA+B,gBAA/B,C,wFACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,MAAM,CAAGX,SAAS,EAAxB,CACA,GAAMY,CAAAA,KAAK,CAAGT,aAAa,EAA3B,CAEA,aAAuDK,OAAO,CAACC,cAAD,CAAiB,IAAjB,CAA9D,CAAOI,WAAP,UAAOA,WAAP,CAAoBC,MAApB,UAAoBA,MAApB,CAAiCC,WAAjC,UAA4BC,IAA5B,CAA8CC,KAA9C,UAA8CA,KAA9C,CAEAZ,SAAS,CAAC,UAAM,CACdQ,WAAW,CAACF,MAAM,CAACO,OAAR,CAAX,CAED,CAHQ,CAGN,CAACL,WAAD,CAAcF,MAAM,CAACO,OAArB,CAHM,CAAT,CAIA;AACA,GAAGJ,MAAM,GAAK,SAAd,CAAwB,CACtB,mBAAO,YAAK,SAAS,CAAC,UAAf,UAA2BG,KAA3B,EAAP,CACD,CAED,GAAI,CAACF,WAAW,CAACI,IAAjB,CAAuB,CACrB,mBAAO,qCAAP,CACD,CACD,mBACE,MAAC,QAAD,yBACE,KAAC,gBAAD,EAAkB,IAAI,CAAEJ,WAAW,CAACI,IAApC,CAA0C,MAAM,CAAEJ,WAAW,CAACK,MAA9D,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAER,KAAK,CAACS,IAAnB,CAAyB,KAAK,KAA9B,uBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,CAA4B,EAAE,WAAKT,KAAK,CAACU,GAAX,aAA9B,2BADF,EADF,EAFF,cASE,KAAC,KAAD,EAAO,IAAI,WAAKV,KAAK,CAACS,IAAX,aAAX,uBACE,KAAC,QAAD,IADF,EATF,GADF,CAeD,CAjCD,CAmCA,cAAeX,CAAAA,YAAf","sourcesContent":["import { useParams, Route, Link , useRouteMatch} from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {sendRequest, status, data:loadedQuote, error} = useHttp(getSingleQuote, true)\r\n  \r\n  useEffect(() => {\r\n    sendRequest(params.quoteId)\r\n\r\n  }, [sendRequest, params.quoteId])\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if(status === 'pending'){\r\n    return <div className='centered'>{error}</div>\r\n  }\r\n  \r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}