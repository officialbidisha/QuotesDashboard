{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    quoteId\n  } = params.quoteId;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  const addedCommentHandler = () => {\n    if (status === 'pending') {\n      comments = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (status === 'completed' && loadedComments) {\n      comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"2fTbw7xjEnRySBlMGCPDaYtYEVc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","quoteId","startAddCommentHandler","comments","addedCommentHandler"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMY,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAM;AAACW,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAACC;AAA3B,MAA6CX,OAAO,CAACC,cAAD,CAA1D;AACA,QAAM;AAACW,IAAAA;AAAD,MAAYL,MAAM,CAACK,OAAzB;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAACI,OAAD,CAAX;AACD,GAFQ,EAEN,CAACJ,WAAD,EAAaI,OAAb,CAFM,CAAT;;AAIA,QAAMC,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,MAAIQ,QAAJ;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAGN,MAAM,KAAK,SAAd,EAAwB;AACtBK,MAAAA,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACT,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,cAAX;AAGD;;AAED,QAAGL,MAAM,KAAK,WAAX,IAA0BE,cAA7B,EAA4C;AAC1CG,MAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAe,QAAA,QAAQ,EAAIH;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;AAEF,GAXD;;AAYA,sBACE;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACgB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACT,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACK,OAAhC;AAAyC,MAAA,cAAc,EAAEG;AAAzD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxCD;;GAAMV,Q;UAEWP,S,EAEoCG,O;;;KAJ/CI,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const {sendRequest, status, data:loadedComments} = useHttp(getAllComments);\n  const {quoteId} = params.quoteId\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest,quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n\n  const addedCommentHandler = () => {\n    if(status === 'pending'){\n      comments = <div className=\"centered\">\n        <LoadingSpinner/>\n      </div>\n    }\n\n    if(status === 'completed' && loadedComments){\n      comments = <CommentsList  comments = {loadedComments}/>\n    }\n\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}/>}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}