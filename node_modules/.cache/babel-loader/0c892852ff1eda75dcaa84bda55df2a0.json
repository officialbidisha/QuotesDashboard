{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bidisha Das\\\\Downloads\\\\QuotesDashboard\\\\QuotesDashboard\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Maxmillian\",\n  text: \"Learning React is great!\"\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/Bidisha Das/Downloads/QuotesDashboard/QuotesDashboard/src/pages/QuoteDetails.js"],"names":["useParams","Route","Link","Fragment","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetails","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AACA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADmB,EAEnB;AACEF,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,YAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAFmB,CAArB;;AAQA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAMY,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAAjD,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACH,IADd;AAEE,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,MAAM,CAACG,OAAQ,EAAvC;AAA0C,MAAA,KAAK,MAA/C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,UAASH,MAAM,CAACG,OAAQ,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzBD;;GAAMJ,Y;UACWV,S;;;KADXU,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import { useParams, Route, Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Maxmillian\",\r\n    text: \"Learning React is great!\",\r\n  },\r\n];\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if (!quote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote\r\n        text={quote.text}\r\n        author={quote.author}\r\n      ></HighlightedQuote>\r\n      <Route path={`/quotes/${params.quoteId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`quotes/${params.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`/quotes/${params.quoteId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}